import {field, document} from '../../mongoose/decorators'; 
import {Types} from 'mongoose';
import {CrudEntity} from '../../core/dynamic/crud.entity';

export class baseModel extends CrudEntity {
    constructor(object?: any) {
        super();
    }

    @field({ primary: true, autogenerated: true })
    _id: Types.ObjectId;

    @field()
    name: String;

    @field()
    parent: any;

    @field()
    batch: any;

    /*
        nodedata internal use for caching, use for findWhere case
    */
    __selectedFindWhere: string;

    /*
        nodedata internal use for caching, to marked as partial load for findMany (egar load case not load)
    */
    __partialLoaded: boolean;
}

export default baseModel;